# Generated by Django 4.0.4 on 2023-11-24 07:00

import base.db.utilities
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import hashid_field.field


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('forms', '0001_initial'),
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('catalogs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='ABCDEFGHJKMNPQRSTUVWXYZ23456789', min_length=10, prefix='', primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
                ('image', models.ImageField(blank=True, null=True, upload_to=base.db.utilities.get_file_path, verbose_name='Photo')),
                ('description', models.CharField(blank=True, max_length=500, null=True, verbose_name='Description')),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_supplers', to='supply_chains.entity', verbose_name='Buyer')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'ordering': ('-created_on',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='supply_chains.entity')),
                ('house_name', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=500, null=True)),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('sub_province', models.CharField(blank=True, max_length=500, null=True)),
                ('province', models.CharField(blank=True, max_length=500, null=True)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('zipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone Number')),
                ('name', models.CharField(max_length=500, verbose_name='Company Name')),
                ('buy_enabled', models.BooleanField(default=True, verbose_name='Buy Enabled')),
                ('sell_enabled', models.BooleanField(default=False, verbose_name='Sell Enabled')),
                ('quality_correction', models.BooleanField(default=False, verbose_name='Quality Correction')),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
            bases=('supply_chains.entity', models.Model),
        ),
        migrations.CreateModel(
            name='EntityCard',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='ABCDEFGHJKMNPQRSTUVWXYZ23456789', min_length=10, prefix='', primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entity_cards', to='catalogs.connectcard', verbose_name='Card')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='card_entities', to='supply_chains.entity', verbose_name='Entity')),
                ('updater', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
        ),
        migrations.AddField(
            model_name='entity',
            name='entity_card',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entities', to='supply_chains.entitycard', verbose_name='Entity Card'),
        ),
        migrations.AddField(
            model_name='entity',
            name='updater',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Updater'),
        ),
        migrations.CreateModel(
            name='CompanyProduct',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='ABCDEFGHJKMNPQRSTUVWXYZ23456789', min_length=10, prefix='', primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('form', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_product', to='forms.form', verbose_name='Form')),
                ('premiums', models.ManyToManyField(related_name='company_products', to='catalogs.premium', verbose_name='Premium')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_products', to='catalogs.product', verbose_name='Product')),
                ('updater', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'ordering': ('-created_on',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyMember',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='ABCDEFGHJKMNPQRSTUVWXYZ23456789', min_length=10, prefix='', primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
                ('type', models.CharField(choices=[('SUPER_ADMIN', 'Super Admin'), ('ADMIN', 'Admin'), ('REPORTER', 'Reporter')], default='ADMIN', max_length=11, verbose_name='Member Type')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Member Active')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updater', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='member_companies', to=settings.AUTH_USER_MODEL, verbose_name='Member User')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyFieldVisibilty',
            fields=[
                ('id', hashid_field.field.HashidAutoField(alphabet='ABCDEFGHJKMNPQRSTUVWXYZ23456789', min_length=10, prefix='', primary_key=True, serialize=False)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='Updated On')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='Updated On')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('visibility', models.BooleanField(default=True, verbose_name='Visibility')),
                ('type', models.CharField(choices=[('TRANSACTION', 'Transaction'), ('FARMER', 'Farmer')], default='TRANSACTION', max_length=11, verbose_name='Type')),
                ('creator', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='creator_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
                ('updater', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updater_%(class)s_objects', to=settings.AUTH_USER_MODEL, verbose_name='Updater')),
            ],
            options={
                'ordering': ('-created_on',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Farmer',
            fields=[
                ('entity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='supply_chains.entity')),
                ('house_name', models.CharField(blank=True, max_length=100, null=True)),
                ('street', models.CharField(blank=True, max_length=500, null=True)),
                ('city', models.CharField(blank=True, max_length=500, null=True)),
                ('sub_province', models.CharField(blank=True, max_length=500, null=True)),
                ('province', models.CharField(blank=True, max_length=500, null=True)),
                ('latitude', models.FloatField(default=0.0)),
                ('longitude', models.FloatField(default=0.0)),
                ('zipcode', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=500, null=True)),
                ('number', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email Address')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Phone Number')),
                ('identification_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Identification')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('gender', models.CharField(blank=True, max_length=50, null=True, verbose_name='Gender')),
                ('consent_status', models.CharField(choices=[('GRANTED', 'Granted'), ('NOT_GRANTED', 'Not Granted'), ('UNKNOWN', 'Unknown')], default='GRANTED', max_length=20, verbose_name='Consent Status')),
                ('submission', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='forms.submission', verbose_name='Submission')),
            ],
            options={
                'abstract': False,
            },
            bases=('supply_chains.entity', models.Model),
        ),
        migrations.AddConstraint(
            model_name='entitycard',
            constraint=models.UniqueConstraint(fields=('card', 'entity'), name='unique_entity_card'),
        ),
        migrations.AddField(
            model_name='companyproduct',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_products', to='supply_chains.company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='companymember',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_members', to='supply_chains.company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='companyfieldvisibilty',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='field_visibilities', to='supply_chains.company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='company',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='using_companies', to='catalogs.currency', verbose_name='Default Currency'),
        ),
        migrations.AddField(
            model_name='company',
            name='members',
            field=models.ManyToManyField(related_name='entities', through='supply_chains.CompanyMember', to=settings.AUTH_USER_MODEL, verbose_name='Member Companies'),
        ),
        migrations.AddField(
            model_name='company',
            name='products',
            field=models.ManyToManyField(related_name='companies', through='supply_chains.CompanyProduct', to='catalogs.product', verbose_name='Products'),
        ),
        migrations.AlterUniqueTogether(
            name='companymember',
            unique_together={('company', 'user')},
        ),
    ]
